# Generated by Django 2.2.27 on 2022-03-18 06:32

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('position', models.CharField(choices=[('POS', 'Postdoctoral Researcher'), ('PHD', 'Ph.D. Student'), ('MAS', 'Master Student'), ('INT', 'Integrated Ph.D. Student'), ('VIS', 'Visiting Researcher')], max_length=3)),
                ('position_start_date', models.DateField(help_text='For graduate students, use YYYY-03-01 for Spring entry and YYYY-09-01 for Fall entry.', null=True, verbose_name='Join date')),
                ('position_end_date', models.DateField(blank=True, help_text='For graduate students, use YYYY-02-28 for Spring graduation and YYYY-08-31 for Fall graduation.', null=True, verbose_name='Depart date')),
                ('department', models.CharField(blank=True, default='KAIST AI', help_text="Department at KAIST for current students. E.g., 'KAIST AI', 'Industrial & Systems Engineering', 'Knowledge Service Engineering'.", max_length=100, null=True)),
                ('visiting_title', models.CharField(blank=True, help_text="Custom title for visiting researchers. Please use abbreviations for department names. E.g., 'UG at KAIST CS', 'PhD at SNU CS'.", max_length=100, null=True)),
                ('degree', models.CharField(blank=True, default='Artificial Intelligence', help_text="Name of final degree for graduated members. E.g., (MS in) 'Artificial Intelligence', (PhD in) 'Artificial Intelligence'. Do not include 'MS in', etc.", max_length=100, null=True)),
                ('profile_image', models.ImageField(blank=True, help_text='Please upload images with a 1:1 aspect ratio and minimum resolution of 500x500.', null=True, upload_to='')),
                ('website', models.URLField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, help_text="E.g., '010-0000-0000'", max_length=50, null=True)),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('research_topics', models.TextField(blank=True, help_text="Please use title-case, i.e., start words in uppercase. E.g., 'NAS, Transfer Learning, Theory of AI'.", max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvitationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=core.models.generate_invitation_code, max_length=20)),
                ('position', models.CharField(choices=[('POS', 'Postdoctoral Researcher'), ('PHD', 'Ph.D. Student'), ('MAS', 'Master Student'), ('INT', 'Integrated Ph.D. Student'), ('VIS', 'Visiting Researcher')], max_length=3)),
                ('uses_remaining', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('title', models.TextField()),
                ('published_date', models.DateField(help_text='Date of publication, used for sorting. Use conference start date for conferences.')),
                ('authors', models.TextField(help_text="E.g., 'Yoshua Bengio, Yann LeCun and Geoffrey Hinton'")),
                ('venue', models.TextField(help_text='Use abbreviations for top-tier AI conferences. Add paretheses around year for journal articles. E.g., \'NeurIPS (Oral) 2020\', \'NeurIPS Workshop: "Competition Track on Black-Box Optimization Challenge" 2020\', \'Nature (2020)\', \'IEEE Transactions on Wireless Communications (2020)\'')),
                ('year', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('type', models.CharField(choices=[('CON', 'International Conference'), ('WOR', 'International Conference (Workshop)'), ('JRN', 'International Journal'), ('KJR', 'Domestic Journal'), ('KCO', 'Domestic Conference')], max_length=3)),
                ('pdf_link', models.URLField(blank=True, null=True)),
                ('code_link', models.URLField(blank=True, null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publications_created', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('title', models.TextField()),
                ('organization', models.TextField()),
                ('members', models.TextField(help_text="E.g., 'Yoshua Bengio, Yann LeCun and Geoffrey Hinton'")),
                ('image', models.ImageField(upload_to='')),
                ('summary', models.TextField(max_length=1000)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projected_created', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='')),
                ('taken_date', models.DateField()),
                ('description', models.TextField(max_length=200)),
                ('public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos_created', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
